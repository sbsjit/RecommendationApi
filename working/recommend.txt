import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity

######helper functions.#######
def get_location_from_index(index):
	return df[df.index == index]["location"].values[0]

def get_index_from_location(location):
	return df[df.location == location]["index"].values[0]
##################################################

df = pd.read_csv("destination.csv")
# print(df.head())
# print(df.columns)
features = [ 'category', 'reviews', 'price' ]

for feature in features:
	df[feature] = df[features].fillna(' ')
def combine_features(row):
	try:
		return row['category']
	except:
		print ("Error: ", row)

df["combined_features"] = df.apply(combine_features,axis=1)
# print("Combined Features: ", df["combined_features"].head())

cv = CountVectorizer()
count_matrix = cv.fit_transform(df["combined_features"])

cosine_sim = cosine_similarity(count_matrix)
destination = "Pokhara"

destination_index = get_index_from_location(destination)
similar_destination = list(enumerate(cosine_sim[destination_index]))

sorted_similar_destinations = sorted(similar_destination, key= lambda x:x[1], reverse=True)

i=0
for dest in sorted_similar_destinations:
	print(get_location_from_index(dest[0]))
	i =  i+1
	if i>5:
		break